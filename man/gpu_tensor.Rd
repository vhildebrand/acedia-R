% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpuTensor.R
\name{gpu_tensor}
\alias{gpu_tensor}
\title{Create a GPU Tensor}
\usage{
gpu_tensor(
  data,
  shape,
  dtype = "double",
  device = "cuda",
  requires_grad = FALSE
)
}
\arguments{
\item{data}{A numeric vector or array containing the data}

\item{shape}{An integer vector specifying the tensor dimensions}

\item{dtype}{Data type: "double" or "float" (default: "double")}

\item{device}{Device location: "cuda" or "cpu" (default: "cuda")}

\item{requires_grad}{Whether to track gradients (default: FALSE)}
}
\value{
A gpuTensor object
}
\description{
Creates a gpuTensor object from R data, transferring it to GPU memory with specified shape.
}
\details{
This function creates a multi-dimensional GPU tensor with the specified shape.
The tensor supports views, broadcasting, async operations, and automatic differentiation
when requires_grad=TRUE.
}
\examples{
\dontrun{
# Create a 2D tensor (matrix)
data <- 1:12
tensor <- gpu_tensor(data, shape = c(3, 4))

# Create a 3D tensor
tensor_3d <- gpu_tensor(runif(24), shape = c(2, 3, 4))

# Create with gradient tracking
tensor_grad <- gpu_tensor(1:6, shape = c(2, 3), requires_grad = TRUE)
}

}
