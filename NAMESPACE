# Generated by roxygen2: do not edit by hand

S3method("!=",gpuTensor)
S3method("$",gpuTensor)
S3method("*",gpuTensor)
S3method("+",gpuTensor)
S3method("-",gpuTensor)
S3method("/",gpuTensor)
S3method("<",gpuTensor)
S3method("<=",gpuTensor)
S3method("==",gpuTensor)
S3method(">",gpuTensor)
S3method(">=",gpuTensor)
S3method("[",gpuTensor)
S3method("[<-",gpuTensor)
S3method("^",gpuTensor)
S3method(Math,gpuTensor)
S3method(all,equal.gpuTensor)
S3method(all,gpuTensor)
S3method(any,gpuTensor)
S3method(argmax,gpuTensor)
S3method(argmin,gpuTensor)
S3method(as.array,gpuTensor)
S3method(as.numeric,gpuTensor)
S3method(as.vector,gpuTensor)
S3method(as_tensor,default)
S3method(ceiling,gpuTensor)
S3method(cos,gpuTensor)
S3method(cumprod,gpuTensor)
S3method(cumsum,gpuTensor)
S3method(diff,gpuTensor)
S3method(dim,gpuTensor)
S3method(dtype,gpuTensor)
S3method(erf,default)
S3method(erf,gpuTensor)
S3method(exp,gpuTensor)
S3method(floor,gpuTensor)
S3method(is.finite,gpuTensor)
S3method(log,gpuTensor)
S3method(max,gpuTensor)
S3method(mean,gpuTensor)
S3method(min,gpuTensor)
S3method(pmax,default)
S3method(pmax,gpuTensor)
S3method(pmin,default)
S3method(pmin,gpuTensor)
S3method(print,gpuTensor)
S3method(prod,gpuTensor)
S3method(range,gpuTensor)
S3method(rnorm,default)
S3method(rnorm,gpuTensor)
S3method(round,gpuTensor)
S3method(runif,default)
S3method(runif,gpuTensor)
S3method(sin,gpuTensor)
S3method(sqrt,gpuTensor)
S3method(sum,gpuTensor)
S3method(tanh,gpuTensor)
S3method(var,default)
S3method(var,gpuTensor)
S3method(which.max,default)
S3method(which.max,gpuTensor)
S3method(which.min,default)
S3method(which.min,gpuTensor)
export(argmax)
export(argmin)
export(as_tensor)
export(benchmark_gpu_chains)
export(benchmark_gpu_threshold)
S3method(determinant,gpuTensor)
S3method(solve,gpuTensor)
S3method(qr,gpuTensor)
S3method(chol,gpuTensor)
export(gpu_eigen)
export(create_tensor_unified)
export(tensor_shape_unified)
export(tensor_to_r_unified)
export(tensor_det_unified)
export(tensor_solve_unified)
export(tensor_qr_unified)
export(tensor_chol_unified)
export(tensor_eigen_unified)
export(lu_decompose)
export(concat)
export(concat_tensor)
export(contiguous)
export(create_ones_like)
export(dtype)
export(empty_tensor)
export(erf)
export(gpuTensor)
export(gpu_add)
export(gpu_available)
export(gpu_dot)
export(gpu_info)
export(gpu_memory_available)
export(gpu_multiply)
export(gpu_scale)
export(gpu_status)
export(gpu_tensor)
export(is_contiguous)
export(matmul)
export(matvec)
export(outer_product)
export(pad_tensor)
export(permute)
export(permute_view)
export(plot_gpu_chains)
export(plot_gpu_threshold)
export(pmax)
export(pmin)
export(rand_tensor)
export(rand_tensor_normal)
export(rand_tensor_uniform)
export(relu)
export(repeat_tensor)
export(reshape)
export(rnorm)
export(rnorm_tensor)
export(runif)
export(set_random_seed)
export(shape)
export(shape.gpuTensor)
export(shares_memory)
export(sigmoid)
export(size)
export(size.gpuTensor)
export(softmax)
export(stack)
export(stack_tensor)
export(synchronize)
export(tensor_info)
export(tensor_max)
export(tensor_mean)
export(tensor_min)
export(tensor_pow)
export(tensor_prod)
export(tensor_sum)
export(tensor_to_scalar)
export(tensor_var)
export(to_numeric)
export(transpose)
export(transpose_view)
export(var)
export(vecmat)
export(view)
export(which.max)
export(which.min)
importFrom(Rcpp,sourceCpp)
useDynLib(acediaR, .registration = TRUE)
